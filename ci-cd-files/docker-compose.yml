x-backend-env: &bot-env
  ENVIRONMENT: ${ENVIRONMENT}
  APP_HOST: ${APP_HOST}
  APP_PORT: ${APP_PORT}
  REDIS_HOST: ${REDIS_HOST}
  REDIS_PORT: ${REDIS_PORT}
  REDIS_PASSWORD: ${REDIS_PASSWORD}
  REDIS_USER: ${REDIS_USER}
  REDIS_USER_PASSWORD: ${REDIS_USER_PASSWORD}
  RABBITMQ_USER: ${RABBITMQ_USER}
  RABBITMQ_PASS: ${RABBITMQ_USER}
  MONGO_HOST: ${MONGO_HOST}
  MONGO_PORT: ${MONGO_PORT}
  MONGO_USER: ${MONGO_USER}
  MONGO_PASS: ${MONGO_PASS}
  WEAVIATE_URL: ${WEAVIATE_URL:-http://weaviate:8080}
  WEAVIATE_API_KEY: ${WEAVIATE_API_KEY:-}
  OPENAI_API_KEY: ${OPENAI_API_KEY}

services:
  backend:
    dns:
      - 8.8.8.8
      - 1.1.1.1
    build:
      context: ..
      dockerfile: ci-cd-files/Dockerfile
      target: production
      args:
        MODE: prod
    command: uvicorn src.app.main:app --reload --host ${APP_HOST} --port ${APP_PORT} --log-level debug
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    environment:
      <<: *bot-env
      NO_PROXY: 'api.openai.com, llm.api.cloud.yandex.net, api.proxyapi.ru'
    ports:
      - "${APP_PORT}:${APP_PORT}"
    volumes:
      - ..:/app
    depends_on:
      - redis
      - rabbitmq
      - mongodb
      - weaviate
    restart: always
    networks:
      - network

  redis:
    image: redis:latest
    restart: always
    container_name: redis
    environment: *bot-env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - ./redisdata:/data
      - ../redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment: *bot-env
    networks:
      - network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 10s
      retries: 5

  rmq-consumer:
    build:
      context: ..
      dockerfile: ci-cd-files/Dockerfile
      target: production
      args:
        MODE: prod
    container_name: rmq-consumer
    command: sh -c "PYTHONPATH=/app python /app/src/app/integrations/rmq/consumer.py"
    restart: always
    environment: *bot-env
    volumes:
      - ..:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - network
      
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
    volumes:
      - mongo-data:/data/db
    networks:
      - network
    command: mongod --quiet --logpath /dev/null

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
    networks:
      - network
      
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.2
    container_name: weaviate
    ports:
      - "8080:8080"
    environment:
      <<: *bot-env
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      ENABLE_MODULES: 'text2vec-openai'
      OPENAI_APIKEY: ${OPENAI_API_KEY}
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate-data:/var/lib/weaviate
    networks:
      - network
    restart: always
    
  # weaviate-ui:
  #   image: naaive/weaviate-ui:latest
  #   container_name: weaviate-ui
  #   ports:
  #     - "8091:3000"
  #   environment:
  #     WEAVIATE_URL: http://weaviate:8080
  #     WEAVIATE_API_KEYS: ${WEAVIATE_API_KEY:-}
  #     TLS_VERIFY: 'false'
  #     TLS_HOSTNAME_VERIFY: 'false'
  #     PORT: 3000
  #   depends_on:
  #     - weaviate
  #   networks:
  #     - network
  #   restart: always

networks:
  network:
    external: true


volumes:
  mongo-data:
    driver: local
  weaviate-data:
    driver: local