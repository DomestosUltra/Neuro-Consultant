import logging
from aiogram import Router, Bot
from aiogram.filters import Command
from aiogram.types import Message, BotCommand

from src.app.bot.keyboards.main_keyboards import (
    get_model_keyboard,
    get_agent_keyboard,
    get_auth_keyboard,
)

from src.app.services.bot_functions import (
    log_interaction,
    is_first_start,
    start_auth_process,
    is_user_authenticated,
    set_auth_stage,
    get_user_credentials,
    get_user_codelab,
)


logger = logging.getLogger(__name__)

router = Router(name="Commands")


async def set_bot_commands(bot: Bot):
    commands = [
        BotCommand(command="start", description="–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand(command="model", description="–í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å GPT"),
        BotCommand(command="agent", description="–í—ã–±—Ä–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞"),
        BotCommand(command="auth", description="–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"),
        BotCommand(command="help", description="–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"),
    ]
    await bot.set_my_commands(commands)


@router.message(Command("start"))
async def cmd_start(message: Message):
    response_text = "<b>–ü—Ä–∏–≤–µ—Ç! üëã</b>\n–Ø ‚Äì –±–æ—Ç-–¥–∏–µ—Ç–æ–ª–æ–≥, –≥–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Ç–µ–±–µ —É–ª—É—á—à–∏—Ç—å –ø–∏—Ç–∞–Ω–∏–µ –∏ –∑–¥–æ—Ä–æ–≤—å–µ!"
    await message.answer(response_text)

    start = await is_first_start(message.from_user.id)
    if start:
        await message.answer(
            "<i>–í—ã–±–µ—Ä–∏ –º–æ–¥–µ–ª—å –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã:</i>",
            reply_markup=get_model_keyboard(),
        )

    await log_interaction(
        message.from_user.id,
        message.from_user.username or "",
        "/start",
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.",
    )


@router.message(Command("model"))
async def cmd_model(message: Message):
    response_text = "<b>–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏</b> ü§ñ\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:"
    await message.answer(response_text, reply_markup=get_model_keyboard())

    await log_interaction(
        message.from_user.id,
        message.from_user.username or "",
        "/model",
        "–ò–∑–º–µ–Ω–µ–Ω–∞ –º–æ–¥–µ–ª—å.",
    )


@router.message(Command("agent"))
async def cmd_agent(message: Message):
    response_text = (
        "<b>–í—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞</b> üë®‚Äç‚öïÔ∏è\n\n"
        "–í—ã–±–µ—Ä–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Ç–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã:\n\n"
        "‚Ä¢ üçè <b>–î–∏–µ—Ç–æ–ª–æ–≥</b> - —Å–æ–≤–µ—Ç—ã –ø–æ –ø–∏—Ç–∞–Ω–∏—é –∏ –¥–∏–µ—Ç–∞–º\n"
        "‚Ä¢ üí™ <b>–§–∏—Ç–Ω–µ—Å —Ç—Ä–µ–Ω–µ—Ä</b> - –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è\n"
        "‚Ä¢ üè• <b>–í—Ä–∞—á</b> - –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º\n\n"
        "<i>–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–∞—Ö</i>"
    )
    await message.answer(response_text, reply_markup=get_agent_keyboard())

    await log_interaction(
        message.from_user.id,
        message.from_user.username or "",
        "/agent",
        "–í—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.",
    )


@router.message(Command("auth"))
async def cmd_auth(message: Message):
    user_id = str(message.from_user.id)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if await is_user_authenticated(user_id):
        credentials = await get_user_credentials(user_id)
        codelab = await get_user_codelab(user_id)

        auth_details = (
            f"–ª–æ–≥–∏–Ω: {credentials.login}"
            if credentials
            else "–¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        )
        codelab_details = (
            f"–ª–∞–±–∫–æ–¥: {codelab}" if codelab else "–ª–∞–±–∫–æ–¥ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        )

        await message.answer(
            "<b>–í—ã —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã</b> ‚úÖ\n\n"
            f"<b>–î–∞–Ω–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç–∞ MyGenetics:</b>\n"
            f"‚Ä¢ {auth_details}\n"
            f"‚Ä¢ {codelab_details}\n\n"
            "–í–∞—à–∏ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –ø—Ä–∏ –æ—Ç–≤–µ—Ç–∞—Ö –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã."
        )
        return

    # –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await start_auth_process(user_id)
    await set_auth_stage(user_id, "waiting_credentials")

    response_text = (
        "<b>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ MyGenetics</b> üîê\n\n"
        "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–∑–≤–æ–ª–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤–∞—à–µ–≥–æ –æ—Ç—á–µ—Ç–∞ –ø–æ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–º—É —Ç–µ—Å—Ç—É "
        "–¥–ª—è –±–æ–ª–µ–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.\n\n"
        "<i>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</i>"
    )
    await message.answer(response_text, reply_markup=get_auth_keyboard())

    await log_interaction(
        message.from_user.id,
        message.from_user.username or "",
        "/auth",
        "–ó–∞–ø—Ä–æ—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.",
    )


@router.message(Command("help"))
async def cmd_help(message: Message):
    help_text = (
        "<b>–°–ø—Ä–∞–≤–∫–∞</b> ‚ÑπÔ∏è\n\n"
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "<code>/start</code> ‚Äî –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
        "<code>/model</code> ‚Äî –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞\n"
        "<code>/agent</code> ‚Äî –≤—ã–±–æ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–∞\n"
        "<code>/auth</code> ‚Äî –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞—à–∏–º –¥–∞–Ω–Ω—ã–º\n"
        "<code>/help</code> ‚Äî —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n\n"
        "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å!\n"
    )
    await message.answer(help_text)

    await log_interaction(
        message.from_user.id,
        message.from_user.username or "",
        "/help",
        help_text,
    )
