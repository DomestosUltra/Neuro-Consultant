import logging
from typing import Dict, Any

from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.enums import ParseMode

from src.app.bot.states.report_states import (
    ReportSummary,
    MainMenu,
    AskQuestion,
    DetoxSection,
    BehaviorSection,
    CarbSection,
    SportSection,
    LipidSection,
)

from src.app.bot.keyboards.report_keyboards import (
    get_report_summary_kb,
    get_main_menu_kb,
    get_ask_question_kb,
    get_section_summary_kb,
    get_section_detail_kb,
)

from src.app.services.report_service import ReportService

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—Ç—á–µ—Ç–∞
router = Router()
report_service = ReportService()


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞
async def get_report_data(user_id: int) -> Dict[str, Any]:
    """–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î
    # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    return await report_service.get_user_report(user_id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –æ—Ç—á–µ—Ç–∞
@router.message(Command("start_report"))
async def cmd_start_report(message: Message, state: FSMContext):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç—á–µ—Ç–∞"""
    user_id = message.from_user.id
    report_data = await get_report_data(user_id)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    await state.update_data(report_data=report_data)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—é–º–µ –æ—Ç—á–µ—Ç–∞
    summary_text = "üß¨ <b>–†–µ–∑—é–º–µ –≤–∞—à–µ–≥–æ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞</b>\n\n"
    summary_text += (
        "–ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ –≤–∞—à–µ–≥–æ –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞. "
    )
    summary_text += "–ù–∞–∂–º–∏—Ç–µ ¬´–í–ø–µ—Ä–µ–¥¬ª –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."

    await message.answer(
        text=summary_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_report_summary_kb(),
    )

    await state.set_state(ReportSummary.SHOW_SUMMARY)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
@router.callback_query(ReportSummary.SHOW_SUMMARY, F.data == "to_main_menu")
async def to_main_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –æ—Ç —Ä–µ–∑—é–º–µ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é"""
    menu_text = "üß™ <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –≥–µ–Ω–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç—á–µ—Ç–∞</b>\n\n"
    menu_text += "–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –æ—Ç—á–µ—Ç–∞:"

    await callback.message.edit_text(
        text=menu_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_main_menu_kb(),
    )

    await state.set_state(MainMenu.MENU)
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–∞ "–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"
@router.callback_query(MainMenu.MENU, F.data == "ask_question")
async def to_ask_question(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —ç–∫—Ä–∞–Ω—É –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å"""
    question_text = "‚ùì <b>–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ —Å–≤–æ–µ–º—É –æ—Ç—á–µ—Ç—É</b>\n\n"
    question_text += "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç, –∏ –Ω–∞—à –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å."

    await callback.message.edit_text(
        text=question_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_ask_question_kb(),
    )

    await state.set_state(AskQuestion.INPUT_QUESTION)
    await callback.answer()


@router.message(AskQuestion.INPUT_QUESTION)
async def process_question(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞"""
    user_question = message.text

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(user_question=user_question)

    # –í —Ä–µ–∞–ª—å–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ LLM
    answer_text = f"<b>–í–∞—à –≤–æ–ø—Ä–æ—Å:</b> {user_question}\n\n"
    answer_text += "–û—Ç–≤–µ—Ç: –≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. "
    answer_text += "–í —Ä–µ–∞–ª—å–Ω–æ–º —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏, –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ LLM."

    await message.answer(
        text=answer_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_ask_question_kb(),
    )

    await state.set_state(AskQuestion.CONFIRM_QUESTION)


@router.callback_query(AskQuestion.CONFIRM_QUESTION, F.data == "back_to_menu")
@router.callback_query(AskQuestion.INPUT_QUESTION, F.data == "back_to_menu")
async def question_back_to_menu(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await to_main_menu(callback, state)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤ –æ—Ç—á–µ—Ç–∞
@router.callback_query(MainMenu.MENU, F.data == "section_detox")
async def to_detox_summary(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞–∑–¥–µ–ª—É —Å–∏—Å—Ç–µ–º –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏ (–∫—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è)"""
    detox_text = "üß™ <b>–°–∏—Å—Ç–µ–º—ã –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏</b>\n\n"
    detox_text += "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏.\n"
    detox_text += "–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."

    await callback.message.edit_text(
        text=detox_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_summary_kb("detox"),
    )

    await state.set_state(DetoxSection.SHOW_SUMMARY)
    await callback.answer()


@router.callback_query(DetoxSection.SHOW_SUMMARY, F.data == "detail_detox")
async def to_detox_detail(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–∞—Ö –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏"""
    detox_detail_text = "üß™ <b>–°–∏—Å—Ç–µ–º—ã –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏ (–ø–æ–¥—Ä–æ–±–Ω–æ)</b>\n\n"
    detox_detail_text += "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏ –≤–∞—à–µ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–º–∞.\n"
    detox_detail_text += (
        "–ó–¥–µ—Å—å –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."
    )

    await callback.message.edit_text(
        text=detox_detail_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_detail_kb("detox", "behavior"),
    )

    await state.set_state(DetoxSection.SHOW_DETAIL)
    await callback.answer()


@router.callback_query(DetoxSection.SHOW_DETAIL, F.data == "back_to_detox")
async def back_to_detox_summary(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–∞—Ö –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–∏"""
    await to_detox_summary(callback, state)


@router.callback_query(DetoxSection.SHOW_DETAIL, F.data == "to_behavior")
async def to_behavior_summary(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞–∑–¥–µ–ª—É –ø–∏—â–µ–≤–æ–≥–æ –ø–æ–≤–µ–¥–µ–Ω–∏—è"""
    behavior_text = "üçΩÔ∏è <b>–ü–∏—â–µ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</b>\n\n"
    behavior_text += (
        "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–∏—â–µ–≤—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º.\n"
    )
    behavior_text += (
        "–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
    )

    await callback.message.edit_text(
        text=behavior_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_summary_kb("behavior"),
    )

    await state.set_state(BehaviorSection.SHOW_SUMMARY)
    await callback.answer()


@router.callback_query(
    BehaviorSection.SHOW_SUMMARY, F.data == "detail_behavior"
)
async def to_behavior_detail(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∏—â–µ–≤–æ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏"""
    behavior_detail_text = "üçΩÔ∏è <b>–ü–∏—â–µ–≤–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ (–ø–æ–¥—Ä–æ–±–Ω–æ)</b>\n\n"
    behavior_detail_text += (
        "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–∏—â–µ–≤—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º.\n"
    )
    behavior_detail_text += "–ó–¥–µ—Å—å –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∏—Ç–∞–Ω–∏—é —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–π –≥–µ–Ω–µ—Ç–∏–∫–∏."

    await callback.message.edit_text(
        text=behavior_detail_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_detail_kb("behavior", "carb"),
    )

    await state.set_state(BehaviorSection.SHOW_DETAIL)
    await callback.answer()


@router.callback_query(
    BehaviorSection.SHOW_DETAIL, F.data == "back_to_behavior"
)
async def back_to_behavior_summary(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∏—â–µ–≤–æ–º –ø–æ–≤–µ–¥–µ–Ω–∏–∏"""
    await to_behavior_summary(callback, state)


@router.callback_query(BehaviorSection.SHOW_DETAIL, F.data == "to_carb")
@router.callback_query(MainMenu.MENU, F.data == "section_carb")
async def to_carb_summary(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞–∑–¥–µ–ª—É —É–≥–ª–µ–≤–æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞"""
    carb_text = "ü•ê <b>–£–≥–ª–µ–≤–æ–¥–Ω—ã–π –æ–±–º–µ–Ω</b>\n\n"
    carb_text += (
        "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —É–≥–ª–µ–≤–æ–¥–Ω—ã–º –æ–±–º–µ–Ω–æ–º.\n"
    )
    carb_text += "–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."

    await callback.message.edit_text(
        text=carb_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_summary_kb("carb"),
    )

    await state.set_state(CarbSection.SHOW_SUMMARY)
    await callback.answer()


@router.callback_query(CarbSection.SHOW_SUMMARY, F.data == "detail_carb")
async def to_carb_detail(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–≥–ª–µ–≤–æ–¥–Ω–æ–º –æ–±–º–µ–Ω–µ"""
    carb_detail_text = "ü•ê <b>–£–≥–ª–µ–≤–æ–¥–Ω—ã–π –æ–±–º–µ–Ω (–ø–æ–¥—Ä–æ–±–Ω–æ)</b>\n\n"
    carb_detail_text += (
        "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —É–≥–ª–µ–≤–æ–¥–Ω—ã–º –æ–±–º–µ–Ω–æ–º.\n"
    )
    carb_detail_text += (
        "–ó–¥–µ—Å—å –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é —É–≥–ª–µ–≤–æ–¥–æ–≤."
    )

    await callback.message.edit_text(
        text=carb_detail_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_detail_kb("carb", "sport"),
    )

    await state.set_state(CarbSection.SHOW_DETAIL)
    await callback.answer()


@router.callback_query(CarbSection.SHOW_DETAIL, F.data == "back_to_carb")
async def back_to_carb_summary(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–≥–ª–µ–≤–æ–¥–Ω–æ–º –æ–±–º–µ–Ω–µ"""
    await to_carb_summary(callback, state)


@router.callback_query(CarbSection.SHOW_DETAIL, F.data == "to_sport")
@router.callback_query(MainMenu.MENU, F.data == "section_sport")
async def to_sport_summary(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞–∑–¥–µ–ª—É —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è"""
    sport_text = "üèÉ <b>–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ</b>\n\n"
    sport_text += "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º –∑–¥–æ—Ä–æ–≤—å–µ–º.\n"
    sport_text += "–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."

    await callback.message.edit_text(
        text=sport_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_summary_kb("sport"),
    )

    await state.set_state(SportSection.SHOW_SUMMARY)
    await callback.answer()


@router.callback_query(SportSection.SHOW_SUMMARY, F.data == "detail_sport")
async def to_sport_detail(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º –∑–¥–æ—Ä–æ–≤—å–µ"""
    sport_detail_text = "üèÉ <b>–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ (–ø–æ–¥—Ä–æ–±–Ω–æ)</b>\n\n"
    sport_detail_text += "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏.\n"
    sport_detail_text += "–ó–¥–µ—Å—å –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –Ω–∞–≥—Ä—É–∑–∫–∞–º —Å —É—á–µ—Ç–æ–º –≤–∞—à–µ–π –≥–µ–Ω–µ—Ç–∏–∫–∏."

    await callback.message.edit_text(
        text=sport_detail_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_detail_kb("sport", "lipid"),
    )

    await state.set_state(SportSection.SHOW_DETAIL)
    await callback.answer()


@router.callback_query(SportSection.SHOW_DETAIL, F.data == "back_to_sport")
async def back_to_sport_summary(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–º –∑–¥–æ—Ä–æ–≤—å–µ"""
    await to_sport_summary(callback, state)


@router.callback_query(SportSection.SHOW_DETAIL, F.data == "to_lipid")
@router.callback_query(MainMenu.MENU, F.data == "section_lipid")
async def to_lipid_summary(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä–∞–∑–¥–µ–ª—É –ª–∏–ø–∏–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞"""
    lipid_text = "üßà <b>–õ–∏–ø–∏–¥–Ω—ã–π –æ–±–º–µ–Ω</b>\n\n"
    lipid_text += (
        "–ö—Ä–∞—Ç–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–∞—à–∏—Ö –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ª–∏–ø–∏–¥–Ω—ã–º –æ–±–º–µ–Ω–æ–º.\n"
    )
    lipid_text += "–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."

    await callback.message.edit_text(
        text=lipid_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_summary_kb("lipid"),
    )

    await state.set_state(LipidSection.SHOW_SUMMARY)
    await callback.answer()


@router.callback_query(LipidSection.SHOW_SUMMARY, F.data == "detail_lipid")
async def to_lipid_detail(callback: CallbackQuery, state: FSMContext):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏–ø–∏–¥–Ω–æ–º –æ–±–º–µ–Ω–µ"""
    lipid_detail_text = "üßà <b>–õ–∏–ø–∏–¥–Ω—ã–π –æ–±–º–µ–Ω (–ø–æ–¥—Ä–æ–±–Ω–æ)</b>\n\n"
    lipid_detail_text += (
        "–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–µ–Ω–∞—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ª–∏–ø–∏–¥–Ω—ã–º –æ–±–º–µ–Ω–æ–º.\n"
    )
    lipid_detail_text += (
        "–ó–¥–µ—Å—å –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é –∏ —É—Å–≤–æ–µ–Ω–∏—é –∂–∏—Ä–æ–≤."
    )

    await callback.message.edit_text(
        text=lipid_detail_text,
        parse_mode=ParseMode.HTML,
        reply_markup=get_section_detail_kb("lipid"),
    )

    await state.set_state(LipidSection.SHOW_DETAIL)
    await callback.answer()


@router.callback_query(LipidSection.SHOW_DETAIL, F.data == "back_to_lipid")
async def back_to_lipid_summary(callback: CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –∫ –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∏–ø–∏–¥–Ω–æ–º –æ–±–º–µ–Ω–µ"""
    await to_lipid_summary(callback, state)


# –û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Å–µ–∫—Ü–∏–π –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@router.callback_query(F.data == "back_to_menu")
async def general_back_to_menu(callback: CallbackQuery, state: FSMContext):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–π —Å–µ–∫—Ü–∏–∏"""
    await to_main_menu(callback, state)
